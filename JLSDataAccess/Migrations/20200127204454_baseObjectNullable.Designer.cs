// <auto-generated />
using System;
using JLSDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JLSDataAccess.Migrations
{
    [DbContext(typeof(JlsDbContext))]
    [Migration("20200127204454_baseObjectNullable")]
    partial class baseObjectNullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JLSDataModel.Models.Order.OrderInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminRemark");

                    b.Property<string>("ClientRemark");

                    b.Property<string>("ContactTelephone");

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("OrderReferenceCode");

                    b.Property<string>("PaymentInfo");

                    b.Property<long>("StatusReferenceItemId");

                    b.Property<float?>("TaxRate");

                    b.Property<float?>("TotalPrice");

                    b.Property<long?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("StatusReferenceItemId");

                    b.ToTable("OrderInfo");
                });

            modelBuilder.Entity("JLSDataModel.Models.Order.OrderInfoLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChangedDescription");

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<long>("OrderInfoId");

                    b.Property<long?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("OrderInfoId");

                    b.ToTable("OrderInfoLog");
                });

            modelBuilder.Entity("JLSDataModel.Models.Order.OrderInfoShipping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CountryReferenceItemId");

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<long>("OrderInfoId");

                    b.Property<string>("ShippingAdress");

                    b.Property<string>("ShippingAdressDetail");

                    b.Property<string>("ShippingCity");

                    b.Property<string>("ShippingPostCode");

                    b.Property<string>("ShippingTelephone");

                    b.Property<long?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("CountryReferenceItemId");

                    b.HasIndex("OrderInfoId");

                    b.ToTable("OrderInfoShipping");
                });

            modelBuilder.Entity("JLSDataModel.Models.Product.DiscountActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<float>("DiscountPercentage");

                    b.Property<string>("Title");

                    b.Property<long?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<bool?>("Validity");

                    b.HasKey("Id");

                    b.ToTable("DiscountActivity");
                });

            modelBuilder.Entity("JLSDataModel.Models.Product.DiscountActivityProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<long>("DiscountActivityId");

                    b.Property<long>("ProductId");

                    b.Property<long?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("DiscountActivityId");

                    b.HasIndex("ProductId");

                    b.ToTable("DiscountActivityProduct");
                });

            modelBuilder.Entity("JLSDataModel.Models.Product.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("Material");

                    b.Property<int?>("MinQuantity");

                    b.Property<float?>("Price");

                    b.Property<string>("ProductReferenceCode");

                    b.Property<int?>("QuantityPerBox");

                    b.Property<long>("ReferenceItemId");

                    b.Property<string>("Size");

                    b.Property<long?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<bool?>("Validity");

                    b.HasKey("Id");

                    b.HasIndex("ReferenceItemId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("JLSDataModel.Models.Product.ProductPhotoPath", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("Path");

                    b.Property<long>("ProductId");

                    b.Property<long?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPhotoPath");
                });

            modelBuilder.Entity("JLSDataModel.Models.ReferenceCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("LongLabel");

                    b.Property<string>("ShortLabel");

                    b.Property<long?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<bool?>("Validity");

                    b.HasKey("Id");

                    b.ToTable("ReferenceCategory");
                });

            modelBuilder.Entity("JLSDataModel.Models.ReferenceItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int?>("Order");

                    b.Property<long?>("ParentId");

                    b.Property<long>("ReferenceCategoryId");

                    b.Property<long?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<bool?>("Validity");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ReferenceCategoryId");

                    b.ToTable("ReferenceItem");
                });

            modelBuilder.Entity("JLSDataModel.Models.ReferenceLabel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("Label");

                    b.Property<string>("Lang");

                    b.Property<long>("ReferenceItemId");

                    b.Property<long?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("ReferenceItemId");

                    b.ToTable("ReferenceLabel");
                });

            modelBuilder.Entity("JLSDataModel.Models.Order.OrderInfo", b =>
                {
                    b.HasOne("JLSDataModel.Models.ReferenceItem", "StatusReferenceItem")
                        .WithMany()
                        .HasForeignKey("StatusReferenceItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JLSDataModel.Models.Order.OrderInfoLog", b =>
                {
                    b.HasOne("JLSDataModel.Models.Order.OrderInfo", "OrderInfo")
                        .WithMany()
                        .HasForeignKey("OrderInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JLSDataModel.Models.Order.OrderInfoShipping", b =>
                {
                    b.HasOne("JLSDataModel.Models.ReferenceItem", "CountryReferenceItem")
                        .WithMany()
                        .HasForeignKey("CountryReferenceItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JLSDataModel.Models.Order.OrderInfo", "OrderInfo")
                        .WithMany()
                        .HasForeignKey("OrderInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JLSDataModel.Models.Product.DiscountActivityProduct", b =>
                {
                    b.HasOne("JLSDataModel.Models.Product.DiscountActivity", "DiscountActivity")
                        .WithMany()
                        .HasForeignKey("DiscountActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JLSDataModel.Models.Product.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JLSDataModel.Models.Product.Product", b =>
                {
                    b.HasOne("JLSDataModel.Models.ReferenceItem", "ReferenceItem")
                        .WithMany()
                        .HasForeignKey("ReferenceItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JLSDataModel.Models.Product.ProductPhotoPath", b =>
                {
                    b.HasOne("JLSDataModel.Models.Product.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JLSDataModel.Models.ReferenceItem", b =>
                {
                    b.HasOne("JLSDataModel.Models.ReferenceCategory", "ReferenceCategory")
                        .WithMany()
                        .HasForeignKey("ReferenceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JLSDataModel.Models.ReferenceLabel", b =>
                {
                    b.HasOne("JLSDataModel.Models.ReferenceItem", "ReferenceItem")
                        .WithMany()
                        .HasForeignKey("ReferenceItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
